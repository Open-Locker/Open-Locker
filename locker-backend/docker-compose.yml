services:
    app:
        build:
            context: ./docker/8.4
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: sail-8.4/app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            pgsql:
                condition: service_healthy
            mailpit:
                condition: service_started
            redis:
                condition: service_healthy
        healthcheck:
            test:
                - CMD
                - curl
                - -f
                - http://localhost
            interval: 5s
            timeout: 5s
            retries: 5
    queue-worker:
        image: sail-8.4/app
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
        command: "php artisan queue:work --queue=default --tries=3 --timeout=90"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            pgsql:
                condition: service_healthy
            redis:
                condition: service_healthy
            mqtt:
                condition: service_healthy
    event-worker:
        image: sail-8.4/app
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
        command: "php artisan queue:work --queue=events --tries=3 --timeout=90"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            pgsql:
                condition: service_healthy
            redis:
                condition: service_healthy
            mqtt:
                condition: service_healthy
    mqtt-listener:
        image: sail-8.4/app
        restart: unless-stopped
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
        command: "php artisan mqtt:listen"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            pgsql:
                condition: service_healthy
            redis:
                condition: service_healthy
            mqtt:
                condition: service_healthy
    mailpit:
        image: "axllent/mailpit:latest"
        ports:
            - "${FORWARD_MAILPIT_PORT:-1025}:1025"
            - "${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025"
        networks:
            - sail
    mqtt:
        image: vernemq/vernemq:2.1.1
        restart: unless-stopped
        ports:
            - "1883:1883"
        environment:
            # General
            DOCKER_VERNEMQ_ACCEPT_EULA: "yes"
            DOCKER_VERNEMQ_ALLOW_ANONYMOUS: "off"
            DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL: info
            # Listeners
            DOCKER_VERNEMQ_LISTENER__TCP__DEFAULT: "0.0.0.0:1883"
            DOCKER_VERNEMQ_LISTENER__TCP__LOCALHOST: "127.0.0.1:0"
            # Enable webhooks; disable DB/file auth plugins
            DOCKER_VERNEMQ_PLUGINS__VMQ_WEBHOOKS: "on"
            DOCKER_VERNEMQ_PLUGINS__VMQ_DIVERSITY: "off"
            DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD: "off"
            DOCKER_VERNEMQ_PLUGINS__VMQ_ACL: "off"
            # Webhook hooks (use named instances per docs)
            DOCKER_VERNEMQ_VMQ_WEBHOOKS__WEBHOOK_REG__HOOK: "auth_on_register"
            DOCKER_VERNEMQ_VMQ_WEBHOOKS__WEBHOOK_SUB__HOOK: "auth_on_subscribe"
            DOCKER_VERNEMQ_VMQ_WEBHOOKS__WEBHOOK_PUB__HOOK: "auth_on_publish"
            # Webhook endpoints (Basic Auth in URL)
            DOCKER_VERNEMQ_VMQ_WEBHOOKS__WEBHOOK_REG__ENDPOINT: "http://${VMQ_WEBHOOK_USER}:${VMQ_WEBHOOK_PASS}@app/api/vmq/auth_on_register"
            DOCKER_VERNEMQ_VMQ_WEBHOOKS__WEBHOOK_SUB__ENDPOINT: "http://${VMQ_WEBHOOK_USER}:${VMQ_WEBHOOK_PASS}@app/api/vmq/auth_on_subscribe"
            DOCKER_VERNEMQ_VMQ_WEBHOOKS__WEBHOOK_PUB__ENDPOINT: "http://${VMQ_WEBHOOK_USER}:${VMQ_WEBHOOK_PASS}@app/api/vmq/auth_on_publish"
        networks:
            - sail
        depends_on:
            app:
                condition: service_healthy

    redis:
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-6379}:6379"
        volumes:
            - "sail-redis:/data"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    pgsql:
        image: "postgres:17"
        ports:
            - "${FORWARD_DB_PORT:-5432}:5432"
        environment:
            PGPASSWORD: "${DB_PASSWORD:-secret}"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
        volumes:
            - "sail-pgsql:/var/lib/postgresql/data"
            - "./vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql"
            # Removed pgcrypto extension mount; not required anymore
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - "-q"
                - "-d"
                - "${DB_DATABASE}"
                - "-U"
                - "${DB_USERNAME}"
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-redis:
        driver: local
    sail-pgsql:
        driver: local
