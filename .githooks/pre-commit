#!/bin/sh
echo "Starting Hook Manager..."

# Find out which files have changed
CHANGED_FILES=$(git diff --cached --name-only)

# Define projects in the monorepo
PROJECTS="locker-backend"

# Error status variable (in case a hook fails)
HOOK_FAILED=0

# Determine the root directory of the repo
REPO_ROOT=$(git rev-parse --show-toplevel)

# Iterate through each project and check if it has its own hook
for PROJECT in $PROJECTS; do
  if echo "$CHANGED_FILES" | grep -q "^$PROJECT/"; then
    HOOK_PATH="$REPO_ROOT/$PROJECT/.githooks/pre-commit"

    if [ -f "$HOOK_PATH" ]; then
      echo "🚀 Running hook for $PROJECT..."
      chmod +x "$HOOK_PATH"  # If necessary

      # Execute hook and prefix each line of output with the project name
      # We use a temporary file to capture the output
      TEMP_OUTPUT=$(mktemp)

      # Execute the hook and capture both stdout and stderr
      (cd "$REPO_ROOT/$PROJECT" && "$HOOK_PATH") > "$TEMP_OUTPUT" 2>&1 || HOOK_FAILED=1

      # Prefix each line with the project name and output it
      while IFS= read -r line; do
        echo "[$PROJECT] $line"
      done < "$TEMP_OUTPUT"

      # Clean up temporary file
      rm "$TEMP_OUTPUT"
    else
      echo "✅ No hook found for $PROJECT – skipped."
    fi
  fi
done

# If a hook fails, abort the commit
if [ $HOOK_FAILED -ne 0 ]; then
  echo "❌ At least one hook failed. Commit aborted."
  exit 1
fi

echo "✅ All hooks executed successfully."
exit 0
