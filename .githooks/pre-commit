#!/bin/sh
echo "Starte Hook-Manager..."

# Herausfinden, welche Dateien ge√§ndert wurden
CHANGED_FILES=$(git diff --cached --name-only)

# Projekte im Monorepo definieren
PROJECTS="locker-backend"

# Fehlerstatus-Variable (falls ein Hook fehlschl√§gt)
HOOK_FAILED=0

# Bestimme das Root-Verzeichnis des Repos
REPO_ROOT=$(git rev-parse --show-toplevel)

# Durch jedes Projekt iterieren und pr√ºfen, ob es einen eigenen Hook hat
for PROJECT in $PROJECTS; do
  if echo "$CHANGED_FILES" | grep -q "^$PROJECT/"; then
    HOOK_PATH="$REPO_ROOT/$PROJECT/.githooks/pre-commit"

    if [ -f "$HOOK_PATH" ]; then
      echo "üöÄ F√ºhre Hook f√ºr $PROJECT aus..."
      chmod +x "$HOOK_PATH"  # Falls n√∂tig

      # Hook ausf√ºhren, Fehler abfangen und Ausgabe mit Projekt-Tag versehen
      (cd "$REPO_ROOT/$PROJECT" && "$HOOK_PATH") || HOOK_FAILED=1
    else
      echo "‚úÖ Kein Hook f√ºr $PROJECT gefunden ‚Äì √ºbersprungen."
    fi
  fi
done

# Falls ein Hook fehlschl√§gt, Commit abbrechen
if [ $HOOK_FAILED -ne 0 ]; then
  echo "‚ùå Mindestens ein Hook ist fehlgeschlagen. Commit abgebrochen."
  exit 1
fi

echo "‚úÖ Alle Hooks erfolgreich ausgef√ºhrt."
exit 0
